# Workflow to build docker images for a specific branch
#
# You can use the GitHub CLI to trigger this workflow like so:
# gh workflow run docker-branch.yml -R timescale/timescaledb-docker -f branch=1-step-policy-alpha
#
# The built images will be uploaded to our timescaledev account on dockerhub.
# You can view them here: https://hub.docker.com/r/timescaledev/timescaledb/tags
#
name: Docker Image for specific branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch or tag to build'
        required: true

env:
  ORG: theyachtingclam
  TS_VERSION: ${{ github.event.inputs.branch }}

jobs:

  # Build ubuntu TimescaleDB images for both TSL and OSS code.
  timescaledb:

    name: Docker ${{ github.event.inputs.branch }} PG${{ matrix.pg }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pg: [12]

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Linux available buildx platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Linux available buildx platforms
      run: echo ${TS_VERSION}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push nightly Docker image for TimescaleDB
      env:
        ECR_REGISTRY: public.ecr.aws/u8k6j4x6
        ECR_REPOSITORY: timescaledb
      run: make multi ORG=$ORG MY_PG_VERSION=${{ matrix.pg }} TS_VERSION="${TS_VERSION}" TAG="-t $ECR_REGISTRY/$ECR_REPOSITORY:branch-${TS_VERSION}-pg${{ matrix.pg }}"

